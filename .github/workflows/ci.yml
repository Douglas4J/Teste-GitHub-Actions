# Nome do workflow que aparecer√° na aba "Actions" do GitHub
name: Java Teste CI

# Define em quais eventos esse pipeline ser√° acionado
on:
  # Quando houver uma pull request direcionada √† branch "main"
  pull_request:
    branches: [ main ]

# Define os jobs (tarefas) que ser√£o executados
jobs:
  build: # Nome do job (voc√™ pode mudar para algo como "compilar-java" se quiser)
    # Define que o job ser√° executado em um runner Linux (Ubuntu)
    runs-on: ubuntu-latest

    steps:
      # Etapa 1: Faz o checkout do c√≥digo-fonte no reposit√≥rio
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3
        # Essa a√ß√£o clona o c√≥digo do seu reposit√≥rio no runner (m√°quina do GitHub)

      # Etapa 2: Configura o Java 24 no ambiente do runner
      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'   # Temurin = build do OpenJDK mantido pela Eclipse Foundation
          java-version: '24'        # Vers√£o do Java (OpenJDK 24)

      # Etapa 3: Gera o .jar com Maven
      - name: Build e empacotar .jar com Maven
        run: mvn clean package
        # 'clean' apaga arquivos de build anteriores
        # 'package' compila e empacota em um arquivo .jar (sem rodar testes se n√£o existirem)

      - name: Notificar Teams - Adaptive Card
        if: always()
        env:
          COMMIT_MSG: ${{ github.event.head_commit.message || github.event.pull_request.title || 'Mensagem indispon√≠vel' }}
        run: |
          curl -H 'Content-Type: application/json' -d '{
            "type": "message",
            "attachments": [
              {
                "contentType": "application/vnd.microsoft.card.adaptive",
                "contentUrl": null,
                "content": {
                  "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                  "type": "AdaptiveCard",
                  "version": "1.0",
                  "body": [
                    {
                      "type": "TextBlock",
                      "text": "üì£ **Pipeline CI**",
                      "wrap": true
                    },
                    {
                      "type": "TextBlock",
                      "text": "üìÅ Reposit√≥rio: ${{ github.repository }}",
                      "wrap": true
                    },
                    {
                      "type": "TextBlock",
                      "text": "üôã‚Äç‚ôÇÔ∏è Autor: ${{ github.actor }}",
                      "wrap": true
                    },
                    {
                      "type": "TextBlock",
                      "text": "üìù Commit: '"$COMMIT_MSG"'",
                      "wrap": true
                    },
                    {
                      "type": "TextBlock",
                      "text": "üîÄ Branch: ${{ github.head_ref || github.ref_name }}",
                      "wrap": true
                    },
                    {
                      "type": "TextBlock",
                      "text": "üö¶ Status: ${{ job.status }}",
                      "wrap": true
                    },
                    {
                      "type": "TextBlock",
                      "text": "üîó Link: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                      "wrap": true
          
                    }
                  ]
                }
              }
            ]
          }' ${{ secrets.TEAMS_WEBHOOK_URL }}